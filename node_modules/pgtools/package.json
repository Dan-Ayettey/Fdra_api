{
  "_from": "pgtools@^0.3.0",
  "_id": "pgtools@0.3.0",
  "_inBundle": false,
  "_integrity": "sha512-8NxDCJ8xJ6hOp9hVNZqxi+TZl7hM1Jc8pQyj8DlAbyaWnk5OsGwf3gB/UyDODdOguiim9QzbzPsslp//apO+Uw==",
  "_location": "/pgtools",
  "_phantomChildren": {
    "decamelize": "1.2.0",
    "generic-pool": "2.4.3",
    "get-caller-file": "1.0.3",
    "js-string-escape": "1.0.1",
    "lodash.assign": "4.2.0",
    "os-locale": "1.4.0",
    "pg-int8": "1.0.1",
    "pgpass": "1.0.2",
    "postgres-bytea": "1.0.0",
    "postgres-date": "1.0.7",
    "postgres-interval": "1.2.0",
    "read-pkg-up": "1.0.1",
    "require-directory": "2.1.1",
    "require-main-filename": "1.0.1",
    "set-blocking": "2.0.0",
    "string-width": "1.0.2",
    "strip-ansi": "3.0.1",
    "which-module": "1.0.0",
    "wrap-ansi": "2.1.0",
    "y18n": "3.2.1",
    "yargs-parser": "3.2.0"
  },
  "_requested": {
    "escapedName": "pgtools",
    "fetchSpec": "^0.3.0",
    "name": "pgtools",
    "raw": "pgtools@^0.3.0",
    "rawSpec": "^0.3.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/pgtools/-/pgtools-0.3.0.tgz",
  "_shasum": "ee7decf4183ada28299c63df71e1e73c95b5bc53",
  "_shrinkwrap": null,
  "_spec": "pgtools@^0.3.0",
  "_where": "C:\\Users\\ictte\\Desktop\\api",
  "author": {
    "email": "olalonde@gmail.com",
    "name": "Olivier Lalonde"
  },
  "bin": {
    "createdbjs": "createdb.js",
    "dropdbjs": "dropdb.js"
  },
  "bugs": {
    "url": "https://github.com/olalonde/pgtools/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "bluebird": "^3.3.5",
    "pg": "^6.1.0",
    "pg-connection-string": "^0.1.3",
    "yargs": "^5.0.0"
  },
  "deprecated": false,
  "description": "Pure Node.js implementation of PostgreSQL's createdb and dropdb tools",
  "devDependencies": {
    "coveralls": "^2.11.12",
    "nyc": "^11.0.3",
    "standard-version": "^4.2.0"
  },
  "homepage": "https://github.com/olalonde/pgtools#readme",
  "keywords": [
    "createdb",
    "dropdb",
    "knex",
    "postgres",
    "postrgresql"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "pgtools",
  "optionalDependencies": {},
  "readme": "# pgtools\n\n[![Build\nStatus](https://travis-ci.org/olalonde/pgtools.svg?branch=master)](https://travis-ci.org/olalonde/pgtools)\n[![Coverage Status](https://coveralls.io/repos/github/olalonde/pgtools/badge.svg?branch=master)](https://coveralls.io/github/olalonde/pgtools?branch=master)\n[![Standard Version](https://img.shields.io/badge/release-standard%20version-brightgreen.svg)](https://github.com/conventional-changelog/standard-version)\n\n\nPure Node.js implementation of PostgreSQL's\n[createdb](http://www.postgresql.org/docs/9.4/static/app-createdb.html)\nand\n[dropdb](http://www.postgresql.org/docs/9.4/static/app-dropdb.html)\ntools.\n\nOnly supports connection options and database name at the moment.\n\n## Install\n\n```bash\nnpm install --save -g pgtools\n```\n\n## CLI Example\n\n```bash\ncreatedbjs my_awesome_db --user=admin --pasword=admin\n```\n\n## Programatic Example\n\n```javascript\nvar pgtools = require('pgtools');\n\n// This can also be a connection string\n// (in which case the database part is ignored and replaced with postgres)\n\nconst config = {\n  user: 'postgres',\n  password: 'some pass',\n  port: 5432,\n  host: 'localhost'\n}\n\npgtools.createdb(config, 'test-db', function (err, res) {\n  if (err) {\n    console.error(err);\n    process.exit(-1);\n  }\n  console.log(res);\n\n  pgtools.dropdb(config, 'test-db', function (err, res) {\n    if (err) {\n      console.error(err);\n      process.exit(-1);\n    }\n    console.log(res);\n  });\n});\n// a promise API is also available if cb is omitted\n```\n\n# Usage\n\n`pgtools.createdb(config, dbname [, cb(err)])`\n\n`pgtools.dropdb(config, dbname [, cb(err)])`\n\n* _object_ __config__\n\n    An object with user, password, port, and host properties. This can\n    also be a node-postgres compatible connection string.\n\n* _string_ __dbname__\n\n    The name of the database to create.\n\n* _function_ __cb__\n\n    A callback that takes an error argument. If cb is omitted the\n    function will return a Promise.\n\n## Bins\n\n`pgtools` installs two useful binaries:\n\n* `createdbjs`: which emulates pgtools' `createdb` functionality.\n* `dropdbjs`: which emulates pgtools' `dropdb` functionality.\n\n## Releasing\n\nRather than manually running `npm version <patch|minor|major>`, instead run:\n\n```\nnpm run release\n```\n\nThis will automatically generating a CHANGELOG, and bump your package version\nbased on [the angular commit format](https://github.com/conventional-changelog/conventional-changelog-angular/blob/master/convention.md).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/olalonde/pgtools.git"
  },
  "scripts": {
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "docker": "docker-compose up dbcreate && docker-compose up -d db",
    "release": "standard-version",
    "test": "nyc node test.js"
  },
  "version": "0.3.0"
}
